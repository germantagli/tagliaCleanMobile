{"version":3,"sources":["webpack:///./src/app/tabs/tabs.module.ts","webpack:///./src/app/tabs/tabs.page.html","webpack:///./src/app/tabs/tabs.page.scss","webpack:///./src/app/tabs/tabs.page.ts","webpack:///./src/app/tabs/tabs.router.module.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAA6C;AAEJ;AACM;AACF;AAEgB;AAEtB;AAWvC;IAAA;IAA6B,CAAC;IAAjB,cAAc;QAT1B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,0DAAW;gBACX,4DAAY;gBACZ,0DAAW;gBACX,yEAAqB;aACtB;YACD,YAAY,EAAE,CAAC,mDAAQ,CAAC;SACzB,CAAC;OACW,cAAc,CAAG;IAAD,qBAAC;CAAA;AAAH;;;;;;;;;;;;ACnB3B,ytB;;;;;;;;;;;ACAA,+DAA+D,mI;;;;;;;;;;;;;;;;;;;;;;;;;;ACArB;AACkC;AACnC;AAOzC;IAEE,kBAAmB,IAA8B,EAAS,OAAgB;QAAvD,SAAI,GAAJ,IAAI,CAA0B;QAAS,YAAO,GAAP,OAAO,CAAS;QAD1E,YAAO,GAAC,KAAK,CAAC;QAEZ,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IACD,6BAAU,GAAV;QAAA,iBAOG;QAND,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,UAAC,GAAG;YACjC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACf,IAAG,GAAG,KAAG,uBAAuB,EAAC;gBAC/B,KAAI,CAAC,OAAO,GAAC,IAAI,CAAC;aACnB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAZQ,QAAQ;QALpB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,sFAA6B;;SAE9B,CAAC;yCAGwB,uFAAyB,EAAkB,sDAAO;OAF/D,QAAQ,CAcpB;IAAD,eAAC;CAAA;AAdoB;;;;;;;;;;;;;;;;;;;;;;;;ACToB;AACc;AAChB;AAEvC,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,MAAM;QACZ,SAAS,EAAE,mDAAQ;QACnB,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,MAAM;gBACZ,QAAQ,EAAE;oBACR;wBACE,IAAI,EAAE,EAAE;wBACR,YAAY,EAAE,oCAAoC;qBACnD;iBACF;aACF;YACD;gBACE,IAAI,EAAE,MAAM;gBACZ,QAAQ,EAAE;oBACR;wBACE,IAAI,EAAE,EAAE;wBACR,YAAY,EAAE,oCAAoC;qBACnD;iBACF;aACF;YACD;gBACE,IAAI,EAAE,MAAM;gBACZ,QAAQ,EAAE;oBACR;wBACE,IAAI,EAAE,EAAE;wBACR,YAAY,EAAE,oCAAoC;qBACnD;iBACF;aACF;YACD;gBACE,IAAI,EAAE,MAAM;gBACZ,QAAQ,EAAE;oBACR;wBACE,IAAI,EAAE,EAAE;wBACR,YAAY,EAAE,oCAAoC;qBACnD;iBACF;aACF;YACD;gBACE,IAAI,EAAE,EAAE;gBACR,UAAU,EAAE,YAAY;gBACxB,SAAS,EAAE,MAAM;aAClB;SACF;KACF;IACD;QACE,IAAI,EAAE,EAAE;QACR,UAAU,EAAE,YAAY;QACxB,SAAS,EAAE,MAAM;KAClB;CACF,CAAC;AAQF;IAAA;IAAoC,CAAC;IAAxB,qBAAqB;QANjC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,qBAAqB,CAAG;IAAD,4BAAC;CAAA;AAAH","file":"tabs-tabs-module.js","sourcesContent":["import { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { TabsPageRoutingModule } from './tabs.router.module';\n\nimport { TabsPage } from './tabs.page';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    TabsPageRoutingModule\n  ],\n  declarations: [TabsPage]\n})\nexport class TabsPageModule {}\n","module.exports = \"<ion-tabs>\\r\\n  <ion-tab-bar slot=\\\"bottom\\\">\\r\\n    <ion-tab-button tab=\\\"tab1\\\">\\r\\n      <ion-icon name=\\\"time\\\"></ion-icon>\\r\\n      <ion-label>Ore</ion-label>\\r\\n    </ion-tab-button>\\r\\n\\r\\n    <ion-tab-button tab=\\\"tab2\\\">\\r\\n      <ion-icon name=\\\"eye\\\"></ion-icon>\\r\\n      <ion-label>View List</ion-label>\\r\\n    </ion-tab-button>\\r\\n\\r\\n    <ion-tab-button tab=\\\"tab4\\\" *ngIf=\\\"isAdmin\\\">\\r\\n      <ion-icon name=\\\"contacts\\\"></ion-icon>\\r\\n      <ion-label>timeShit</ion-label>\\r\\n    </ion-tab-button>\\r\\n\\r\\n\\r\\n    <ion-tab-button tab=\\\"tab3\\\">\\r\\n      <ion-icon name=\\\"log-out\\\"></ion-icon>\\r\\n      <ion-label>Logout</ion-label>\\r\\n    </ion-tab-button>\\r\\n  </ion-tab-bar>\\r\\n</ion-tabs>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RhYnMvdGFicy5wYWdlLnNjc3MifQ== */\"","import { Component } from '@angular/core';\nimport { TagliaCleanServiceService } from '../taglia-clean-service.service';\nimport { Storage } from '@ionic/storage';\n\n@Component({\n  selector: 'app-tabs',\n  templateUrl: 'tabs.page.html',\n  styleUrls: ['tabs.page.scss']\n})\nexport class TabsPage {\n  isAdmin=false;\n  constructor(public auth:TagliaCleanServiceService, public storage: Storage) {\n    this.get_utente();\n  }\n  get_utente(){\n    this.storage.get('email').then((val) => {\n      console.log(val);\n        if(val==='admin@tagliaclean.com'){\n          this.isAdmin=true;\n        }\n      });\n    }\n  \n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TabsPage } from './tabs.page';\n\nconst routes: Routes = [\n  {\n    path: 'tabs',\n    component: TabsPage,\n    children: [\n      {\n        path: 'tab1',\n        children: [\n          {\n            path: '',\n            loadChildren: '../tab1/tab1.module#Tab1PageModule'\n          }\n        ]\n      },\n      {\n        path: 'tab2',\n        children: [\n          {\n            path: '',\n            loadChildren: '../tab2/tab2.module#Tab2PageModule'\n          }\n        ]\n      },\n      {\n        path: 'tab3',\n        children: [\n          {\n            path: '',\n            loadChildren: '../tab3/tab3.module#Tab3PageModule'\n          }\n        ]\n      },\n      {\n        path: 'tab4',\n        children: [\n          {\n            path: '',\n            loadChildren: '../tab4/tab4.module#Tab4PageModule'\n          }\n        ]\n      },\n      {\n        path: '',\n        redirectTo: '/tabs/tab1',\n        pathMatch: 'full'\n      }\n    ]\n  },\n  {\n    path: '',\n    redirectTo: '/tabs/tab1',\n    pathMatch: 'full'\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class TabsPageRoutingModule {}\n"],"sourceRoot":""}